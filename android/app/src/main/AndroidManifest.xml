<?xml version="1.0" encoding="utf-8"?><!--
  ~ Enhanced Music Controller
  ~ Copyright (C) 2019-2023 by Mikhail Kulesh
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the terms of the GNU
  ~ General Public License as published by the Free Software Foundation, either version 3 of the License,
  ~ or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
  ~ even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details. You should have received a copy of the GNU General
  ~ Public License along with this program.
  -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    android:installLocation="auto"
        xmlns:tools="http://schemas.android.com/tools"
        tools:ignore="UnusedAttribute,AllowBackup">

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />

    <queries>
        <!-- Allow to launch Spotify app -->
        <package android:name="com.spotify.music" />
        <!-- Starting from API 30 Android requires package visibility configuration for url_launcher -->
        <intent>
            <action android:name="android.intent.action.VIEW" />
            <data android:scheme="https" />
        </intent>
    </queries>

    <application
        android:name="${applicationName}"
        android:allowBackup="true"
        android:hardwareAccelerated="true"
        android:usesCleartextTraffic="true"
        android:icon="@mipmap/ic_launcher"
        android:roundIcon="@mipmap/ic_launcher"
        android:label="@string/app_name_pro"
        android:description="@string/app_description"
        tools:ignore="GoogleAppIndexingWarning">
        <activity
            android:exported="true"
            android:name="com.mkulesh.onpc.plus.MainActivity"
            android:label="@string/app_short_name"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode">
            <!-- Disable Impeller (see #360 Black Screen Issue in Flutter SDK 3.27.0+ on Oppo Devices) -->
            <meta-data
                android:name="io.flutter.embedding.android.EnableImpeller"
                android:value="false" />
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <meta-data android:name="android.app.shortcuts" android:resource="@xml/shortcuts"/>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

        <!-- The shortcuts widget -->
        <receiver android:name=".WidgetShortcutsProvider"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name_pro">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>
            <!-- This specifies the widget provider info -->
            <meta-data android:name="android.appwidget.provider"
                android:resource="@xml/widget_shortcuts" />
        </receiver>
        <service android:name=".WidgetShortcutsService"
            android:permission="android.permission.BIND_REMOTEVIEWS"
            android:exported="true" />
        <provider android:name=".WidgetShortcutsDataProvider"
            android:authorities="com.mkulesh.onpc.pro.shortcuts"
            android:exported="true"
            android:grantUriPermissions="true" />

        <!-- The playback widget -->
        <receiver android:name=".WidgetPlaybackProvider"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name_pro">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>
            <!-- This specifies the widget provider info -->
            <meta-data android:name="android.appwidget.provider"
                android:resource="@xml/widget_playback" />
        </receiver>

    </application>
</manifest>
